#!/bin/bash
#
# Asterisk for raspberry
# Resources:
#    http://matthewjordan.net/2013/09/02/asterisk-12-on-a-raspberry-pi/
#    http://community.freepbx.org/t/debian-wheezy-freepbx-12-asterisk-13-1-0-how-to-mostly-working-with-warnings/26845
#    https://github.com/stgnet/bin/blob/4fe871dc299388e9836ef8a6df8255f110e2e857/install-fpbx#L97

ASTERISK_VERSION='11'
ASTERISK_USER="asterisk"
INSTALL_CHAN_DONGLE=1
INSTALL_FREEPBX=1
# FreePBX Variables
FREEPBX_VERSION='12.0'
MYSQL_ROOT_PASSWD="raspberry"
ASTERISK_DB_USER="asterisk"
ASTERISK_DB_PW="raspberry"

if [ ! -f /etc/network/interfaces ]; then
    echo "auto lo" > /etc/network/interfaces
    echo "iface lo inet loopback" >> /etc/network/interfaces
    echo "" >> /etc/network/interfaces
    echo "auto eth0" >> /etc/network/interfaces
    echo "iface eth0 inet dhcp" >> /etc/network/interfaces
    
    ifconfig lo 127.0.0.1 netmask 255.0.0.0 up
fi

#--------------------------------------------------#
#                    Asterisk                      #
#--------------------------------------------------#
# Required packages to build Asterisk
echo "Installing pre-requisites..."
apt-get install -y -qq git-core build-essential libsqlite3-dev libxml2-dev libncurses5-dev libncursesw5-dev libiksemel-dev libssl-dev libeditline-dev libedit-dev curl libcurl4-gnutls-dev

# Since this is Asterisk 12, however, I’ll want a few other things as well. 
# The CHANGES and UPGRADE.txt file tell you the additional dependencies
# let’s got those as well:
if [ ${ASTERISK_VERSION} -gt 11 ]; then
    apt-get install -y -qq libjansson4 libjansson-dev libuuid1 uuid-dev libxslt1-dev liburiparser-dev liburiparser1
fi

cd /usr/src
git clone -b ${ASTERISK_VERSION} http://gerrit.asterisk.org/asterisk asterisk-${ASTERISK_VERSION}

if [ $ASTERISK_VERSION  -gt 11 ]; then
    cd /usr/src
    git clone https://github.com/asterisk/pjproject pjproject
    
    cd /usr/src/pjproject
    
    #  I don’t have libsrtp installed and I’m not going to use SRTP in Asterisk, so I 
    # can ignore that. I also don’t have libspeex installed, and I don’t really care 
    # about using libspeex in Asterisk either. The same goes for the GSM library. So, 
    # in the end I ended up with the following
    ./configure --prefix=/usr --enable-shared --disable-sound --disable-video --disable-resample
    make dep
    make
    make install
fi

cd /usr/src/asterisk-${ASTERISK_VERSION}
if [ $ASTERISK_VERSION  -gt 11 ]; then
    ./configure --with-pjproject
else
    ./configure
fi

make menuselect
make
make install
make samples
make progdocs

# Copy startup files
cp /usr/src/asterisk-${ASTERISK_VERSION}/contrib/init.d/rc.debian.asterisk /etc/init.d/asterisk
cp /usr/src/asterisk-${ASTERISK_VERSION}/contrib/init.d/etc_default_asterisk /etc/default/asterisk

sed -e 's/#AST_USER/AST_USER/g' -e 's/#AST_GROUP/AST_GROUP/g' -i /etc/default/asterisk
sed -e 's/__ASTERISK_SBIN_DIR__/\/usr\/sbin/g' -e 's/__ASTERISK_VARRUN_DIR__/\/var\/run\/asterisk\//g' -e 's/__ASTERISK_ETC_DIR__/\/etc\/asterisk\//g' -i /etc/init.d/asterisk
sed -e 's/\/bin\/sh/\/bin\/bash/g' -i /etc/init.d/asterisk

adduser ${ASTERISK_USER} --disabled-password --gecos "Asterisk User"
chown ${ASTERISK_USER}. /var/run/asterisk
chown -R ${ASTERISK_USER}. /etc/asterisk
chown -R ${ASTERISK_USER}. /var/{lib,log,spool}/asterisk
chown -R ${ASTERISK_USER}. /usr/lib/asterisk

update-rc.d asterisk defaults
service asterisk restart

#--------------------------------------------------#
#               Asterisk chan_dongle               #
#--------------------------------------------------#
if [ ${INSTALL_CHAN_DONGLE} -ne 0 ]; then
    apt-get install -y -qq automake

    cd /usr/src

    if [ $ASTERISK_VERSION -eq 10 ]; then
        git clone -b asterisk10 https://github.com/jstasiak/asterisk-chan-dongle.git asterisk-chan-dongle
    elif [ $ASTERISK_VERSION -eq 11 ]; then
        git clone -b asterisk11 https://github.com/jstasiak/asterisk-chan-dongle.git asterisk-chan-dongle
    elif [ $ASTERISK_VERSION -eq 12 ]; then
        git clone https://github.com/superles/chan-dongle-asterisk12.git asterisk-chan-dongle
    else
        echo "Error: chan_dongle is not available for the selected Asterisk version"
        INSTALL_CHAN_DONGLE=0
    fi

    if [ ${INSTALL_CHAN_DONGLE} -ne 0 ]; then
        cd /usr/src/asterisk-chan-dongle
        aclocal && autoconf && automake -a
        ./configure –-with-asterisk="/usr/src/asterisk-${ASTERISK_VERSION}/include"
        if [ $? -ne 0 ]; then
             CFLAGS="-I /usr/src/asterisk-${ASTERISK_VERSION}/include" ./configure
             if [ $? -ne 0 ]; then
                echo "Error: Unable to configure chan_dongle."
                exit 1
             fi
        fi
        
        make
        if [ $? -ne 0 ]; then
            echo "Error: Failed to build chan_dongle."
            exit 1
        fi
        make install

        cp /usr/src/asterisk-chan-dongle/etc/dongle.conf /etc/asterisk/dongle.conf
        echo "KERNEL==\"ttyUSB*\", MODE=\"0666\", OWNER=\"${ASTERISK_USER}\", GROUP=\"uucp\"" > /etc/udev/rules.d/92-dongle.rules

        chown ${ASTERISK_USER}:uucp /dev/ttyUSB*
        chmod 0666 /dev/ttyUSB*
        
        service asterisk restart
    fi
fi

#--------------------------------------------------#
#                     FreePBX                      #
#--------------------------------------------------#
if [ ${INSTALL_FREEPBX} -ne 0 ]; then
    # Install MySQL
    debconf-set-selections <<< "mysql-server mysql-server/root_password password ${MYSQL_ROOT_PASSWD}"
    debconf-set-selections <<< "mysql-server mysql-server/root_password_again password ${MYSQL_ROOT_PASSWD}"
    apt-get install -y -qq --fix-missing mysql-server
    apt-get install -y -qq mysql-client
    
    mysql -uroot -p${MYSQL_ROOT_PASSWD} -e "CREATE DATABASE asterisk;"
    mysql -uroot -p${MYSQL_ROOT_PASSWD} -e "CREATE DATABASE asteriskcdrdb;"
    mysql -uroot -p${MYSQL_ROOT_PASSWD} -e "GRANT ALL PRIVILEGES ON asterisk.* TO ${ASTERISK_DB_USER}@localhost IDENTIFIED BY '${ASTERISK_DB_PW}';"
    mysql -uroot -p${MYSQL_ROOT_PASSWD} -e "GRANT ALL PRIVILEGES ON asteriskcdrdb.* TO ${ASTERISK_DB_USER}@localhost IDENTIFIED BY '${ASTERISK_DB_PW}';"
    mysql -uroot -p${MYSQL_ROOT_PASSWD} -e "flush privileges;"
    
    # Install Apache
    echo "Installing Apache 2..."
    apt-get install -y -qq apache2
    
    chown -R asterisk. /var/www/
    
    rm /var/www/index.html
    
    sed -e "s/^\(User\|Group\).*/\1 ${ASTERISK_USER}/" -i /etc/apache2/apache2.conf
    sed -e 's/AllowOverride None/AllowOverride All/' -i /etc/apache2/sites-available/default
    
    service apache2 restart
    
    # Install PHP
    apt-get install -y -qq php5 libapache2-mod-php5 php-db php5-mysql
    
    sed -i 's/\(^upload_max_filesize = \).*/\1120M/' /etc/php5/apache2/php.ini
    
    # Patch PHP deprecated messages
    find /etc/php5/cli/conf.d/ -name "*.ini" -exec sed -i -re 's/^(\s*)#(.*)/\1;\2/g' {} \;
    
    # Install FreePBX
    cd /usr/src
    git clone http://git.freepbx.org/scm/freepbx/framework.git freepbx-framework
    cd /usr/src/freepbx-framework
    git checkout release/${FREEPBX_VERSION}
    
    ./install_amp --installdb --username=${ASTERISK_DB_USER} --password=${ASTERISK_DB_PW} --dbhost='127.0.0.1' --dbname='asterisk' --webroot '/var/www' --cgibin='/var/www/cgi-bin' --bin='/var/lib/asterisk/bin' --sbin='/usr/local/sbin' --asteriskuser=admin --asteriskpass=admin --asteriskip='127.0.0.1' --scripted --force-overwrite --cleaninstall
    
fi
